h1. Rails 5 Devise Pundit

Rails 5 application with user management, authentication, and authorization. The application shows how to integrate:

* "Devise":https://github.com/plataformatec/devise for user management and authentication
* "Pundit":https://github.com/elabs/pundit for authorization
* "Bootstrap":http://getbootstrap.com/ or "Foundation":http://foundation.zurb.com/ front-end frameworks

h2. What Is Implemented -- and What Is Not

This application extends the "rails-devise":https://github.com/RailsApps/rails-devise example application to add authorization with Pundit. The "rails-devise":https://github.com/RailsApps/rails-devise example application provides:

* Home page
* Navigation bar
* Sign up (create account)
* Login
* "Forgot password?" feature
* "Remember me" (stay logged in) feature
* Edit account (edit user profile)
* List of users

This "rails-devise-pundit":https://github.com/RailsApps/rails-devise-pundit example application adds authorization with Pundit, showing how to implement user roles, and limit access to pages based on user role. With this application:

* an admin can see a list of users
* an admin can change a user's role
* an ordinary user can't see a list of users
* an ordinary user can't change their role
* an ordinary user can't see (or edit) another user's profile
* an ordinary user can see (and edit) their own user profile

After examining the example application, you'll be able to implement access control in your own applications.

h4. Database

The application requires a database. The example application uses SQLite with Rails ActiveRecord. You can easily substitute PostgreSQL, MySQL, or other databases.

h4. Front-end Framework

The example application (here in the GitHub repository) integrates Bootstrap for a navigation bar and flash messages. The "rails_layout":https://github.com/RailsApps/rails_layout gem is included so you can switch to the Foundation front-end framework.

h2. Dependencies

Before generating your application, you will need:

* The Ruby language - version 2.3.0
* The Rails gem - version >= 5.0.0

See the article "Installing Rails":http://railsapps.github.io/installing-rails.html for instructions about setting up Rails and your development environment.

h2. Getting Started

See the article "Installing Rails":http://railsapps.github.io/installing-rails.html to make sure your development environment is prepared properly.

h3. Use RVM

I recommend using "rvm":https://rvm.io/, the Ruby Version Manager, to create a project-specific gemset for the application. If you generate the application with the Rails Composer tool, you can create a project-specific gemset.

h3. Gems

Here are the gems used by the application:

* "Devise":http://github.com/plataformatec/devise for authentication and user management
* "Pundit":https://github.com/elabs/pundit for authorization

These gems make development easier:

* "better_errors":https://github.com/charliesome/better_errors - helps when things go wrong
* "rails_layout":https://github.com/RailsApps/rails_layout - generates files for an application layout

Your choice of front-end framework:

* "bootstrap-sass":https://github.com/thomas-mcdonald/bootstrap-sass - Bootstrap for CSS and JavaScript
* "foundation-rails":https://github.com/zurb/foundation-rails - Zurb Foundation for CSS and JavaScript

h3. Install the Required Gems

Run the @bundle install@ command to install the required gems on your computer:

<pre>
$ bundle install
</pre>

You can check which gems are installed on your computer with:

<pre>
$ gem list
</pre>

Keep in mind that you have installed these gems locally. When you deploy the app to another server, the same gems (and versions) must be available.

h2. MIT License

"MIT License":http://www.opensource.org/licenses/mit-license

Copyright Â©2014-15 Daniel Kehoe

h2. Source

<pre>
  RailsApps:https://github.com/RailsApps/rails-devise-pundit!
</pre>